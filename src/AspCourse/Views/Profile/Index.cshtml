@model AspCourse.Models.AccountViewModels.ProfileViewModel

<script>

    var isModer = false;

    function updateUserData() {
        $.post({
            url: "/Profile/UpdateUser",
            data:{
                NickName:$("#NickNamePicker").val(),
                AvatarUrl: $("#AvatarUrlPicker").val(),
                Color: $("#ColorPicker").val()
            },
            success: function (data) {
                console.log(data);
                window.location.reload();
            }
        });
    }


    function banUser(time) {
        $.post({
            url: "/Profile/Ban/?username=@Model.User.UserName&time=" + time,
            success: function (data) {
                console.log(data);
                window.location.reload();
            }
        });
    }

    function muteUser(time) {
        $.post({
            url: "/Profile/Mute/?username=@Model.User.UserName&time=" + time,
            success: function (data) {
                console.log(data);
                window.location.reload();
            }
        });
    }

    function unBanUser() {
        $.post({
            url: "/Profile/UnBan/?username=@Model.User.UserName",
            success: function (data) {
                console.log(data);
                window.location.reload();
            }
        });
    }

    function unMuteUser() {
        $.post({
            url: "/Profile/UnMute/?username=@Model.User.UserName",
            success: function (data) {
                console.log(data);
                window.location.reload();
            }
        });
    }

    function isUserModer() {
        $.post({
            url: "/Profile/IsModer/?username=@Model.User.UserName",
            success: function (data) {
                console.log(data);
                if (data.toString().indexOf("true")>-1) {
                    $("#toggleModerButton").css("background-color", "green");
                }
                else {
                    $("#toggleModerButton").css("background-color", "red");
                }
            }
        });
    }


    function toggleUserModer() {
        $.post({
            url: "/Profile/ToggleModer/?username=@Model.User.UserName",
            success: function (data) {
                console.log(data);
                isUserModer();
            }
        });
    }



    $(document).ready(function () {
        isUserModer();

    });



</script>

@{ 
    if (Model.User.IsBanned)
    {
        <h1>BANNED</h1>
        <p>@Model.User.BannedUntil</p>
    }
    if (Model.User.IsMuted)
    {
        <h1>MUTED</h1>
        <p>@Model.User.MutedUntil</p>
    }
}

@{
    if (Model.IsModer)
    {       
        if (Model.User.IsBanned)
        {
            <button onclick="unBanUser()">UNBAN</button>
        }
        else
        {
            <button onclick="banUser(10)">BAN 10 MINUTES</button>
        }
        if (Model.User.IsMuted)
        {
            <button onclick="unMuteUser()">UNMUTE</button>
        }
        else
        {
            <button onclick="muteUser(10)">MUTE 10 MINUTES</button>
        }

        <button id="toggleModerButton" onclick="toggleUserModer()">MODER</button>
    }
}
<hr />

<img src="@Model.User.AvatarUrl" width="100px"/>
<hr />
<p>Id: @Model.User.Id</p>
<p>NickName: @Model.User.NickName</p>
<p>UserName: @Model.User.UserName</p>
<p>Registered: @Model.User.RegisteredAt.ToLocalTime()</p>
<p>Last Seen: @Model.User.LastSeenAt.ToLocalTime()</p>
<hr />

<hr />
@{
    if (Model.IsMyself)
    {
        <p>Color: <input type="color" id="ColorPicker" value="@Model.User.Color" /></p>
        <p>Avatar: <input type="text" id="AvatarUrlPicker" value="@Model.User.AvatarUrl" /></p>
        <p>NickName: <input type="text" id="NickNamePicker" value="@Model.User.NickName" /></p>
        <p><button onclick="updateUserData()">Update profile</button></p>
    }    
}

<hr />

<h2>Messages:</h2>
@{

    foreach (var pair in Model.UserTopicsMessages)
    {
        var topic = pair.Item1;
        if (topic != null)
        {
            <div class="well" >
                <h3><a href="~/Chat/Topic/@topic.Id">@topic.Title</a>:</h3>
                @foreach (var m in pair.Item2)
                {
                <div class="well" style="margin-left:30px; background-color:@Model.User.Color">
                    <p>@m.Id - @Model.User.NickName - @m.CreatedAt</p>
                    <p>@m.Text</p>
                </div>
                }
            </div>

        }


    }
}

