@using AspCourse.Models.ChatModels;
@using AspCourse.Models.ChatModels.ChatViewModels;
@model AspCourse.Models.ChatModels.ChatViewModels.IndexViewModel

@section Scripts {
    <script src="~/js/ChatScripts.js"></script>
}

<br /><br />
<center>
    <p><input class="form-control" placeholder="New Topic Title" type="text" id="newTopicTitle" /></p>
    <p><textarea id="newTopicText" cols="100" rows="10" placeholder="Enter Message text here"></textarea></p>
    <p><input id="newMessagePictureUrl" class="form-control" placeholder="Enter Picture Url text here" /></p>

    <p>
        <form id="uploadForm" enctype="multipart/form-data">
            <input type="file" name="file" onchange="uploadImage()" />
        </form>
    </p>
    

    <button class="btn btn-default" onclick="sendNewTopic()">New Topic</button>
</center>
<br />
<br />

@{


    foreach (var p in Model.Previews
        .OrderByDescending(p => p.Item3)
        .OrderByDescending(p => p.Item1.IsSticky))
    {
        Topic t = p.Item1;
        var opMessage = p.Item2.First();

        <div class="well" style="background-color:@opMessage.Author.Color">
            <h2>
                @if (t.IsSticky)
                {
                    <abbr title="Thread is sticky"><span class="glyphicon glyphicon-pushpin" aria-hidden="true"></span></abbr>
                }
                @if (t.IsClosed)
                {
                    <abbr title="Thread is closed"><span class="glyphicon glyphicon-alert" aria-hidden="true"></span></abbr>
                }


                <a href="~/Chat/Topic/@t.Id.ToString()">@t.Title</a>

                <span style="font-size:13px">
                    Subscribed:@t.Likes.Where(l => l.Type == "Subscription").Count()
                    <button onclick="toggleSubscribeTopic(@t.Id)">subscribe</button>
                    Messages:@t.Messages.Count()
                    Users:@t.Messages.Select(m=>m.Author).Distinct().Count()
                </span>

                @if (Model.IsModer)
                {
                    <span style="font-size:12px">

                        <button onclick="removeTopic(@t.Id)">DELETE</button>

                        @if (t.IsSticky)
                        {
                            <button style="background-color:green" onclick="toggleTopicSticked(@t.Id)">STICKED</button>
                        }
                        else
                        {
                            <button style="background-color:red" onclick="toggleTopicSticked(@t.Id)">STICKED</button>
                        }
                        @if (t.IsClosed)
                        {
                            <button style="background-color:green" onclick="toggleTopicClosed(@t.Id)">CLOSED</button>
                        }
                        else
                        {
                            <button style="background-color:red" onclick="toggleTopicClosed(@t.Id)">CLOSED</button>
                        }
                    </span>
                }

            </h2>

            <hr />




            <div style="margin-left:150px">
                @Html.Partial("MessagesListPartial", new MessagesListPartialViewModel()
           {
               Messages = p.Item2.Take(3).ToList(),
               IsModer = Model.IsModer,
           })
            </div>
        </div>
    }

}









