@using AspCourse.Models.ChatModels;
@model AspCourse.Models.ChatModels.ChatViewModels.IndexViewModel

<script>

    function sendNewTopic() {
        $.post({
            url: "/Chat/AddNewTopic",
            data: {
                NewMessageText: $('#newTopicText').val(),
                NewTopicTitle: $('#newTopicTitle').val(),
                NewMessagePictureUrl: $('#newMessagePictureUrl').val()
            },
            success: function (data) {
                window.location.reload();
                console.log(data);
            }
        });
    }

    function removeTopic(id) {
        $.post({
            url: "/Chat/RemoveTopic/?id=" + id,
            type:"DELETE",
            success: function (data) {
                console.log(data);
                window.location.reload();
            }
        })
    }


    function toggleTopicSticked(id){
        $.post({
            url: "/Chat/ToggleTopicSticky/?id=" + id,
            type:"POST",
            success: function (data) {
                console.log(data);
                window.location.reload();
            }
        })
    }


    function toggleTopicClosed(id){
        $.post({
            url: "/Chat/ToggleTopicClosed/?id=" + id,
            type:"POST",
            success: function (data) {
                console.log(data);
                window.location.reload();
            }
        })
    }

    function uploadImage() {
        var data = new FormData($("#uploadForm")[0]);

        $.ajax({
            url: '@Url.Action("AddFile", "File")',
            type: "POST",
            data: data,
            contentType: false,
            dataType: false,
            processData: false,
            success: function (result) {
                $("#newMessagePictureUrl").val("/uploads/"+result);
            }
        });
    }


</script>
<br /><br />
<p><input class="form-control" placeholder="New Topic Title" type="text" id="newTopicTitle" /></p>
<p><textarea id="newTopicText" cols="100" rows="10" placeholder="Enter Message text here"></textarea></p>
<p><input id="newMessagePictureUrl" class="form-control" placeholder="Enter Picture Url text here" /></p>

<form id="uploadForm" enctype="multipart/form-data">
    <input type="file" name="file" onchange="uploadImage()" />
</form>

<button class="btn btn-default" onclick="sendNewTopic()">New Topic</button>
<br />
<br />

@{
    foreach (var p in Model.Previews.OrderByDescending(p => p.Item3).OrderByDescending(p => p.Item1.IsSticky))
    {
        Topic t = p.Item1;
        Message opMessage = p.Item2.FirstOrDefault();



        <div class="well" style="background-color:@opMessage?.Author.Color">
            <h2>
                @if (t.IsSticky)
                {
                    <abbr title="Thread is sticky"><span class="glyphicon glyphicon-pushpin" aria-hidden="true"></span></abbr>
                }
                @if (t.IsClosed)
                {
                    <abbr title="Thread is closed"><span class="glyphicon glyphicon-alert" aria-hidden="true"></span></abbr>
                }


                <a href="~/Chat/Topic/@t.Id.ToString()">@t.Title</a>


                @if (Model.IsModer)
                {
                    <span style="font-size:12px">

                        <button onclick="removeTopic(@t.Id)">DELETE</button>

                        @if (t.IsSticky)
                        {
                            <button style="background-color:green" onclick="toggleTopicSticked(@t.Id)">STICKED</button>
                        }
                        else
                        {
                            <button style="background-color:red" onclick="toggleTopicSticked(@t.Id)">STICKED</button>
                        }
                        @if (t.IsClosed)
                        {
                            <button style="background-color:green" onclick="toggleTopicClosed(@t.Id)">CLOSED</button>
                        }
                        else
                        {
                            <button style="background-color:red" onclick="toggleTopicClosed(@t.Id)">CLOSED</button>
                        }

                    </span>
                }                

            </h2>
            @if (opMessage != null)
            {
                <hr />
                    <img src="@opMessage.Author.AvatarUrl" width="50" />
                    <p>@opMessage.Id - <a href="~/Profile/GetUser/?username=@opMessage.AuthorName">@opMessage.Author.NickName</a> - @opMessage.CreatedAt.ToLocalTime()</p>
                    <p>@opMessage.Text</p>
                    @if (!string.IsNullOrEmpty(opMessage.PictureUrl))
                    {
                        <p><a target="_blank" href="@opMessage.PictureUrl"><img src="@opMessage.PictureUrl" height="300" /></a></p>
                    }
            }
        </div>
        <div style="margin-left:30px">
            @{
                foreach(Message m in p.Item2.Skip(1).ToList())
                {
                    <div class="well" style="background-color:@m.Author.Color">
                        <img src="@m.Author.AvatarUrl" width="50" />            
                        <p>@m.Id - <a href="~/Profile/GetUser/?username=@m.AuthorName">@m.Author.NickName</a> - @m.CreatedAt.ToLocalTime()</p>
                        <p>@m.Text</p>
                        @if (!string.IsNullOrEmpty(m.PictureUrl))
                        {
                            <p><a target="_blank" href="@m.PictureUrl"><img src="@m.PictureUrl" height="300" /></a></p>
                        }

                    </div>
                }
            }
        </div>
    }
}









