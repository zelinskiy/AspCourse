@using AspCourse.Models.ChatModels;
@using System.Text.RegularExpressions;
@model AspCourse.Models.ChatModels.ChatViewModels.TopicViewModel


<script>

    


    function sendNewMessage() {
        $.post({
            url: "/Chat/AddNewMessage",
            data:{
                NewMessageText: $('#newMessageText').val(),
                NewMessageTopicId: "@Model.Topic.Id",
                NewMessagePictureUrl: $('#newMessagePictureUrl').val()
            },
            success: function (data) {
                console.log(data);
                if (data == "YOU ARE MUTED") {
                    alert("You are muted!");
                }
                window.location.reload();
            },            
        });
    }

    function removeMessage(id){
        $.post({
            url: "/Chat/RemoveMessage/?id=" + id,
            success:function(data){
                console.log(data);   
                window.location.reload();
            }
        })    
    }

    function replyToMessage(id){
        $('#newMessageText').val($('#newMessageText').val()+'>>' + id+'\n');     
    }


   


    function uploadImage() {
        var data = new FormData($("#uploadForm")[0]);

        $.ajax({
            url: '@Url.Action("AddFile", "File")',
            type: "POST",
            data: data,
            contentType: false,
            dataType: false,
            processData: false,
            success: function (result) {
                $("#newMessagePictureUrl").val("/uploads/"+result);
            }
        });
    }


</script>

<h1>
    @if (Model.Topic.IsSticky)
    {
        <abbr title="Thread is sticky"><span class="glyphicon glyphicon-pushpin" aria-hidden="true"></span></abbr>
    }
    @if (Model.Topic.IsClosed)
    {
        <abbr title="Thread is closed"><span class="glyphicon glyphicon-alert" aria-hidden="true"></span></abbr>
        
    }

    @Model.Topic.Title
</h1>


<hr />
@{
    var rgx = new Regex("\\>>.*\\d");

    if (Model.Messages != null)
    {
        @foreach (Message m in Model.Messages.OrderBy(m => m.CreatedAt))
        {
            @foreach (Match match in rgx.Matches(m.Text))
            {
                var id = match.Value.Substring(2);
                m.Text = m.Text.Replace(match.Value, $"<a href=\"#{id}\">{match.Value}</a>");
            }

            <div id="@m.Id" class="well" style="background-color:@m.Author.Color">
                <img src="@m.Author.AvatarUrl" height="50" />            
                <p>@m.Id - <a href="~/Profile/GetUser/?username=@m.Author.Id">@m.Author.NickName</a> - @m.CreatedAt.ToLocalTime() - <a href="#newMessageText" onclick="replyToMessage(@m.Id)">reply</a></p>
                
                

                

                <p>@Html.Raw(m.Text.Replace("\n", " <br />"))</p>

                @if (!string.IsNullOrEmpty(m.PictureUrl))
                {
                    <p><a target="_blank" href="@m.PictureUrl"><img src="@m.PictureUrl" height="300" /></a></p>
                }
                
                
                
                


                @{
                    if (Model.IsModer)
                    {
                        <button onclick="removeMessage(@m.Id)">DELETE</button>
                    }
                }
            </div>
            
        }
    }
    else
    {
        <h1>No messages found</h1>
    }
}
@if (!Model.Topic.IsClosed)
{
    <br />
    <p><textarea id="newMessageText" style="height:150px;width:500px" placeholder="Enter Message text here"></textarea></p>
    <p><input id="newMessagePictureUrl"  class="form-control" placeholder="Enter Picture Url text here"/></p>

    <form id="uploadForm"  enctype="multipart/form-data">
        <input type="file" name="file" onchange="uploadImage()"/>
    </form>

    <p><button class="btn btn-default" onclick="sendNewMessage()">Send</button></p>
    
}





